{"ast":null,"code":"var _jsxFileName = \"/Users/thanhnguyen/EmploymentHero/Demo/depotapp_fe/src/modules/Order/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Divider, Grid } from 'hero-design';\nimport { isEmpty } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport Header from '../shared/components/header';\nimport { getLineItemsInCart } from './apiCalls/list';\nimport LineItemCard from './components/LineItemCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Order() {\n  _s();\n\n  const [lineItems, setLineItems] = useState([]);\n  const user = useSelector(state => state.user);\n  useEffect(() => {\n    getLineItemsInCart(user.token, user.id).then(res => {\n      if (res.status == 200) {\n        if (Array.isArray(res.data)) {\n          const dataDeepCopy = res.data.map(doc => Object.assign({}, doc));\n          setLineItems(dataDeepCopy);\n        }\n      }\n    });\n  }, []);\n  const [lineItemPrice, setLineItemPrice] = useState({});\n\n  function updateOrderPrice(lineItemId, price) {\n    setLineItemPrice(state => {\n      state[lineItemId] = price;\n      return state;\n    });\n  }\n\n  const [orderTotalPrice, setOrderTotalPrice] = useState(0);\n\n  function getOrderTotalPrice() {\n    let totalPrice = 0;\n\n    if (!isEmpty(lineItemPrice)) {\n      Object.keys(lineItemPrice).forEach(key => {\n        totalPrice += lineItemPrice[key];\n      });\n    }\n\n    setOrderTotalPrice(totalPrice);\n  }\n\n  const lineItemCards = lineItems.map(item => {\n    return /*#__PURE__*/_jsxDEV(LineItemCard, {\n      item: item,\n      updateOrderPrice: updateOrderPrice\n    }, item.line_item_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n        children: lineItemCards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n        style: {\n          justifyContent: 'right'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid.Col, {\n          span: [4, 4, 4, 4, 4],\n          children: \"In total\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Col, {\n          span: [4, 4, 4, 4, 4],\n          children: getOrderTotalPrice()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Order, \"Yy61rgiJYkXCT1SkWwKQXgSrbYI=\", false, function () {\n  return [useSelector];\n});\n\n_c = Order;\n\nvar _c;\n\n$RefreshReg$(_c, \"Order\");","map":{"version":3,"sources":["/Users/thanhnguyen/EmploymentHero/Demo/depotapp_fe/src/modules/Order/index.tsx"],"names":["Divider","Grid","isEmpty","React","useEffect","useState","useSelector","ToastContainer","Header","getLineItemsInCart","LineItemCard","Order","lineItems","setLineItems","user","state","token","id","then","res","status","Array","isArray","data","dataDeepCopy","map","doc","Object","assign","lineItemPrice","setLineItemPrice","updateOrderPrice","lineItemId","price","orderTotalPrice","setOrderTotalPrice","getOrderTotalPrice","totalPrice","keys","forEach","key","lineItemCards","item","line_item_id","justifyContent"],"mappings":"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","sourcesContent":["import { Divider, Grid } from 'hero-design';\nimport { isEmpty } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport Header from '../shared/components/header';\nimport { getLineItemsInCart } from './apiCalls/list';\nimport LineItemCard from './components/LineItemCard';\n\nexport default function Order() {\n    const [lineItems, setLineItems] = useState<any[]>([]);\n    const user = useSelector((state: any) => state.user)\n\n    useEffect(() => {\n        getLineItemsInCart(user.token, user.id)\n            .then(res => {\n                if (res.status == 200) {\n                    if (Array.isArray(res.data)) {\n                        const dataDeepCopy = res.data.map(doc => Object.assign({}, doc))\n                        setLineItems(dataDeepCopy)\n                    }\n                }\n            })\n    }, [])\n\n    const [lineItemPrice, setLineItemPrice] = useState<any>({});\n    function updateOrderPrice(lineItemId: number, price: number) {\n        setLineItemPrice((state: any) => {\n            state[lineItemId] = price;\n            return state;\n        })\n    }\n\n    const [orderTotalPrice, setOrderTotalPrice] = useState(0);\n    function getOrderTotalPrice() {\n        let totalPrice = 0\n        if (!isEmpty(lineItemPrice)) {\n            Object.keys(lineItemPrice).forEach(key => {\n                totalPrice += lineItemPrice[key]\n            })\n        }\n        setOrderTotalPrice(totalPrice)\n    }\n    \n    const lineItemCards = lineItems.map(item => {\n        return <LineItemCard key={item.line_item_id} item={item} updateOrderPrice={updateOrderPrice} />\n    })\n\n    return (\n        <>\n            <Grid>\n                <Header />\n                <Divider />\n                <Grid.Row>\n                    {lineItemCards}\n                </Grid.Row>\n                <Grid.Row\n                    style={{\n                        justifyContent: 'right'\n                    }}\n                >\n                    <Grid.Col span={[4, 4, 4, 4, 4]}>\n                        In total\n                    </Grid.Col>\n                    <Grid.Col span={[4, 4, 4, 4, 4]}>\n                        {getOrderTotalPrice()}\n                    </Grid.Col>\n                </Grid.Row>\n            </Grid>\n            <ToastContainer />\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}