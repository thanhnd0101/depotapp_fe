{"ast":null,"code":"var _jsxFileName = \"/Users/thanhnguyen/EmploymentHero/Demo/depotapp_fe/src/modules/Histories/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Divider, Grid } from 'hero-design';\nimport { isEmpty } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport Header from '../shared/components/header';\nimport { getOrders } from './apiCalls/list';\nimport OrderCard from './components/OrderCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Histories() {\n  _s();\n\n  const [orders, setOrders] = useState([]);\n  const user = useSelector(state => state.user);\n  const [refresh, setRefresh] = useState(0);\n  const [lineItemPrice, setLineItemPrice] = useState({});\n\n  function updateOrderPrice(lineItemId, price) {\n    setLineItemPrice(state => {\n      state[lineItemId] = price;\n      return state;\n    });\n    setRefresh(state => state + 1);\n  }\n\n  const [orderTotalPrice, setOrderTotalPrice] = useState(0);\n\n  function getOrderTotalPrice() {\n    let totalPrice = 0;\n\n    if (!isEmpty(lineItemPrice)) {\n      Object.keys(lineItemPrice).forEach(key => {\n        totalPrice += lineItemPrice[key];\n      });\n    }\n\n    setOrderTotalPrice(Math.round((totalPrice + Number.EPSILON) * 100) / 100);\n  }\n\n  useEffect(() => {\n    getOrderTotalPrice();\n  }, [refresh]);\n  const orderCards = orders.map(item => {\n    return /*#__PURE__*/_jsxDEV(OrderCard, {\n      item: item,\n      updateOrderPrice: updateOrderPrice\n    }, item.line_item_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }, this);\n  });\n  useEffect(() => {\n    getOrders(user.token, user.id).then(res => {\n      if (res.status == 200) {\n        if (Array.isArray(res.data)) {\n          const dataDeepCopy = res.data.map(doc => Object.assign({}, doc));\n          setOrders(dataDeepCopy);\n        }\n      }\n    });\n  }, [refresh]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n        style: {\n          flexDirection: 'column',\n          alignItems: 'center'\n        },\n        children: orderCards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Histories, \"dWDaAekHLizG1e4NWj7nI0exT1E=\", false, function () {\n  return [useSelector];\n});\n\n_c = Histories;\n\nvar _c;\n\n$RefreshReg$(_c, \"Histories\");","map":{"version":3,"sources":["/Users/thanhnguyen/EmploymentHero/Demo/depotapp_fe/src/modules/Histories/index.tsx"],"names":["Divider","Grid","isEmpty","React","useEffect","useState","useSelector","ToastContainer","Header","getOrders","OrderCard","Histories","orders","setOrders","user","state","refresh","setRefresh","lineItemPrice","setLineItemPrice","updateOrderPrice","lineItemId","price","orderTotalPrice","setOrderTotalPrice","getOrderTotalPrice","totalPrice","Object","keys","forEach","key","Math","round","Number","EPSILON","orderCards","map","item","line_item_id","token","id","then","res","status","Array","isArray","data","dataDeepCopy","doc","assign","flexDirection","alignItems"],"mappings":"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","sourcesContent":["import { Divider, Grid } from 'hero-design';\nimport fileDownload from 'js-file-download';\nimport { isEmpty } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { toast, ToastContainer } from 'react-toastify';\nimport Header from '../shared/components/header';\nimport { getOrders } from './apiCalls/list';\nimport { makeOrder } from './apiCalls/makeOrder';\nimport OrderCard from './components/OrderCard';\n\nexport default function Histories() {\n    const [orders, setOrders] = useState<any[]>([]);\n    const user = useSelector((state: any) => state.user)\n\n    const [refresh, setRefresh] = useState(0);\n    const [lineItemPrice, setLineItemPrice] = useState<any>({});\n    function updateOrderPrice(lineItemId: number, price: number) {\n        setLineItemPrice((state: any) => {\n            state[lineItemId] = price;\n            return state;\n        })\n        setRefresh((state) => state + 1)\n    }\n    const [orderTotalPrice, setOrderTotalPrice] = useState(0);\n    function getOrderTotalPrice() {\n        let totalPrice = 0\n        if (!isEmpty(lineItemPrice)) {\n            Object.keys(lineItemPrice).forEach(key => {\n                totalPrice += lineItemPrice[key]\n            })\n        }\n        setOrderTotalPrice(Math.round((totalPrice + Number.EPSILON) * 100) / 100)\n\n    }\n    useEffect(() => {\n        getOrderTotalPrice()\n    }, [refresh])\n    const orderCards = orders.map(item => {\n        return <OrderCard key={item.line_item_id} item={item} updateOrderPrice={updateOrderPrice} />\n    })\n    useEffect(() => {\n        getOrders(user.token, user.id)\n            .then(res => {\n                if (res.status == 200) {\n                    if (Array.isArray(res.data)) {\n                        const dataDeepCopy = res.data.map(doc => Object.assign({}, doc))\n                        setOrders(dataDeepCopy)\n                    }\n                }\n            })\n    }, [refresh])\n\n    return (\n        <>\n            <Header />\n            <Divider />\n            <Grid>\n                <Grid.Row\n                    style={{\n                        flexDirection: 'column',\n                        alignItems: 'center'\n                    }}\n                >\n                    {orderCards}\n                </Grid.Row>\n            </Grid>\n            <ToastContainer />\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}