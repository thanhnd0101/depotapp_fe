{"ast":null,"code":"var _jsxFileName = \"/Users/thanhnguyen/EmploymentHero/Demo/depotapp_fe/src/modules/Profile/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Grid } from 'hero-design';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { getUserInfoAsync } from './apiCalls/getUserInfo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Profile() {\n  _s();\n\n  const user = useSelector(state => state.user);\n  const [refresh, setRefresh] = useState(0);\n  const [userInfo, setUserInfo] = useState();\n  useEffect(() => {\n    getUserInfoAsync(user.token, user.id).then(response => {\n      if (response.status == 200) {\n        setUserInfo(response.data);\n      } else {\n        toast.error('There is an error');\n      }\n    }).catch(err => {\n      toast.error('There is an error');\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(Grid.Row, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Profile, \"MIPM6LbhdtqXf8A0ki3dUqA0mNA=\", false, function () {\n  return [useSelector];\n});\n\n_c = Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/thanhnguyen/EmploymentHero/Demo/depotapp_fe/src/modules/Profile/index.tsx"],"names":["Grid","React","useEffect","useState","useSelector","toast","ToastContainer","getUserInfoAsync","Profile","user","state","refresh","setRefresh","userInfo","setUserInfo","token","id","then","response","status","data","error","catch","err"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,aAArB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,KAAT,EAAgBC,cAAhB,QAAsC,gBAAtC;AACA,SAASC,gBAAT,QAAiC,wBAAjC;;;AAGA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAC9B,QAAMC,IAAI,GAAGL,WAAW,CAAEM,KAAD,IAAeA,KAAK,CAACD,IAAtB,CAAxB;AAEA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,EAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAK;AACXK,IAAAA,gBAAgB,CAACE,IAAI,CAACM,KAAN,EAAaN,IAAI,CAACO,EAAlB,CAAhB,CACCC,IADD,CACOC,QAAD,IAAmB;AACrB,UAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAvB,EAA2B;AACvBL,QAAAA,WAAW,CAACI,QAAQ,CAACE,IAAV,CAAX;AAEH,OAHD,MAIK;AACDf,QAAAA,KAAK,CAACgB,KAAN,CAAY,mBAAZ;AACH;AACJ,KATD,EAUCC,KAVD,CAUOC,GAAG,IAAI;AACVlB,MAAAA,KAAK,CAACgB,KAAN,CAAY,mBAAZ;AACH,KAZD;AAaH,GAdQ,CAAT;AAgBA,sBACI;AAAA,4BACI,QAAC,IAAD;AAAA,6BACI,QAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA,kBADJ;AAWH;;GAjCuBb,O;UACPJ,W;;;KADOI,O","sourcesContent":["import { Grid } from 'hero-design';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { getUserInfoAsync } from './apiCalls/getUserInfo';\n\n\nexport default function Profile() {\n    const user = useSelector((state:any) => state.user);\n\n    const [refresh, setRefresh] = useState(0);\n    const [userInfo, setUserInfo] = useState();\n\n    useEffect(() =>{\n        getUserInfoAsync(user.token, user.id)\n        .then((response: any) => {\n            if (response.status == 200){\n                setUserInfo(response.data)\n                \n            }\n            else {\n                toast.error('There is an error')\n            } \n        })\n        .catch(err => {\n            toast.error('There is an error')\n        })\n    })\n\n    return (\n        <>\n            <Grid>\n                <Grid.Row>\n\n\n                </Grid.Row>\n            </Grid>\n            <ToastContainer/>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}