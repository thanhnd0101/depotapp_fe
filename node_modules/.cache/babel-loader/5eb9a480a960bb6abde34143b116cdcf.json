{"ast":null,"code":"var _jsxFileName = \"/Users/thanhnguyen/EmploymentHero/Demo/depotapp_fe/src/modules/Order/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Divider, Grid, Typography } from 'hero-design';\nimport fileDownload from 'js-file-download';\nimport { isEmpty } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { toast, ToastContainer } from 'react-toastify';\nimport Header from '../shared/components/header';\nimport { globalStyles } from '../shared/styles/styles';\nimport { getLineItemsInCart } from './apiCalls/list';\nimport { makeOrder } from './apiCalls/makeOrder';\nimport LineItemCard from './components/LineItemCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Order() {\n  _s();\n\n  const [lineItems, setLineItems] = useState([]);\n  const user = useSelector(state => state.user);\n  const [refresh, setRefresh] = useState(0);\n  const [lineItemPrice, setLineItemPrice] = useState({});\n\n  function updateOrderPrice(lineItemId, price) {\n    setLineItemPrice(state => {\n      state[lineItemId] = price;\n      return state;\n    });\n    setRefresh(state => state + 1);\n  }\n\n  const [orderTotalPrice, setOrderTotalPrice] = useState(0);\n\n  function getOrderTotalPrice() {\n    let totalPrice = 0;\n\n    if (!isEmpty(lineItemPrice)) {\n      Object.keys(lineItemPrice).forEach(key => {\n        totalPrice += lineItemPrice[key];\n      });\n    }\n\n    setOrderTotalPrice(Math.round((totalPrice + Number.EPSILON) * 100) / 100);\n  }\n\n  useEffect(() => {\n    getOrderTotalPrice();\n  }, [refresh]);\n  const lineItemCards = lineItems.map(item => {\n    return /*#__PURE__*/_jsxDEV(LineItemCard, {\n      item: item,\n      updateOrderPrice: updateOrderPrice\n    }, item.line_item_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this);\n  });\n  useEffect(() => {\n    getLineItemsInCart(user.token, user.id).then(res => {\n      if (res.status == 200) {\n        if (Array.isArray(res.data)) {\n          const dataDeepCopy = res.data.map(doc => Object.assign({}, doc));\n          setLineItems(dataDeepCopy);\n        }\n      }\n    });\n  }, [refresh]);\n\n  function makeAnOrder() {\n    makeOrder(user.token).then(res => {\n      console.log(res);\n\n      if (res.status === 200 || res.status === 201) {\n        toast.success(\"Order succesfully\");\n        setRefresh(state => state + 1);\n        fileDownload(res.data, \"zip.zip\");\n      } else {\n        toast.error(\"Failed to order\");\n      }\n    }).catch(error => {\n      toast.error(\"Failed to order\");\n    });\n  }\n\n  const isValidOrder = lineItems.length > 0;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n        style: {\n          justifyContent: 'right',\n          marginTop: '2rem',\n          width: '80%'\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid.Col, {\n          span: [4, 4, 4, 4, 4],\n          style: {\n            display: 'flex',\n            justifyContent: 'right'\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            text: \"History\",\n            size: \"large\",\n            variant: \"outlined\",\n            intent: \"primary\" // style={{\n            //     ...globalStyles.button\n            // }}\n            ,\n            onClick: makeAnOrder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n        style: {\n          flexDirection: 'column',\n          alignItems: 'center'\n        },\n        children: [lineItemCards, /*#__PURE__*/_jsxDEV(Grid.Row, {\n          style: {\n            justifyContent: 'right',\n            marginTop: '2rem',\n            width: '80%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid.Col, {\n            span: [4, 4, 4, 4, 4],\n            children: /*#__PURE__*/_jsxDEV(Typography.Title, {\n              style: {\n                textAlign: 'right'\n              },\n              children: \"In total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid.Col, {\n            span: [4, 4, 4, 4, 4],\n            children: /*#__PURE__*/_jsxDEV(Typography.Title, {\n              style: {\n                textAlign: 'right'\n              },\n              children: orderTotalPrice.toString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), isValidOrder && /*#__PURE__*/_jsxDEV(Grid.Row, {\n          style: {\n            justifyContent: 'right',\n            marginTop: '2rem',\n            width: '80%'\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid.Col, {\n            span: [4, 4, 4, 4, 4],\n            style: {\n              display: 'flex',\n              justifyContent: 'right'\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              text: \"Order\",\n              size: \"large\",\n              style: { ...globalStyles.button\n              },\n              onClick: makeAnOrder\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Order, \"bmfyOo2FviNQAH+sWGHvI+X4+DA=\", false, function () {\n  return [useSelector];\n});\n\n_c = Order;\n\nvar _c;\n\n$RefreshReg$(_c, \"Order\");","map":{"version":3,"sources":["/Users/thanhnguyen/EmploymentHero/Demo/depotapp_fe/src/modules/Order/index.tsx"],"names":["Button","Divider","Grid","Typography","fileDownload","isEmpty","React","useEffect","useState","useSelector","toast","ToastContainer","Header","globalStyles","getLineItemsInCart","makeOrder","LineItemCard","Order","lineItems","setLineItems","user","state","refresh","setRefresh","lineItemPrice","setLineItemPrice","updateOrderPrice","lineItemId","price","orderTotalPrice","setOrderTotalPrice","getOrderTotalPrice","totalPrice","Object","keys","forEach","key","Math","round","Number","EPSILON","lineItemCards","map","item","line_item_id","token","id","then","res","status","Array","isArray","data","dataDeepCopy","doc","assign","makeAnOrder","console","log","success","error","catch","isValidOrder","length","justifyContent","marginTop","width","display","flexDirection","alignItems","textAlign","toString","button"],"mappings":"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","sourcesContent":["import { Button, Divider, Grid, Typography } from 'hero-design';\nimport fileDownload from 'js-file-download';\nimport { isEmpty } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { toast, ToastContainer } from 'react-toastify';\nimport Header from '../shared/components/header';\nimport { globalStyles } from '../shared/styles/styles';\nimport { getLineItemsInCart } from './apiCalls/list';\nimport { makeOrder } from './apiCalls/makeOrder';\nimport LineItemCard from './components/LineItemCard';\n\nexport default function Order() {\n    const [lineItems, setLineItems] = useState<any[]>([]);\n    const user = useSelector((state: any) => state.user)\n\n\n\n    const [refresh, setRefresh] = useState(0);\n    const [lineItemPrice, setLineItemPrice] = useState<any>({});\n    function updateOrderPrice(lineItemId: number, price: number) {\n        setLineItemPrice((state: any) => {\n            state[lineItemId] = price;\n            return state;\n        })\n        setRefresh((state) => state + 1)\n    }\n    const [orderTotalPrice, setOrderTotalPrice] = useState(0);\n    function getOrderTotalPrice() {\n        let totalPrice = 0\n        if (!isEmpty(lineItemPrice)) {\n            Object.keys(lineItemPrice).forEach(key => {\n                totalPrice += lineItemPrice[key]\n            })\n        }\n        setOrderTotalPrice(Math.round((totalPrice + Number.EPSILON) * 100) / 100)\n\n    }\n    useEffect(() => {\n        getOrderTotalPrice()\n    }, [refresh])\n    const lineItemCards = lineItems.map(item => {\n        return <LineItemCard key={item.line_item_id} item={item} updateOrderPrice={updateOrderPrice} />\n    })\n    useEffect(() => {\n        getLineItemsInCart(user.token, user.id)\n            .then(res => {\n                if (res.status == 200) {\n                    if (Array.isArray(res.data)) {\n                        const dataDeepCopy = res.data.map(doc => Object.assign({}, doc))\n                        setLineItems(dataDeepCopy)\n                    }\n                }\n            })\n    }, [refresh])\n\n    function makeAnOrder() {\n        makeOrder(user.token)\n            .then((res: any) => {\n                console.log(res)\n                if (res.status === 200 || res.status === 201) {\n                    toast.success(\"Order succesfully\")\n                    setRefresh((state) => state + 1)\n                    fileDownload(res.data, \"zip.zip\")\n                }\n                else {\n                    toast.error(\"Failed to order\")\n                }\n            })\n            .catch(error => {\n                toast.error(\"Failed to order\")\n            })\n    }\n\n    const isValidOrder = lineItems.length > 0;\n    return (\n        <>\n            <Header />\n            <Divider />\n            <Grid>\n\n                <Grid.Row\n                    style={{\n                        justifyContent: 'right',\n                        marginTop: '2rem',\n                        width: '80%',\n                    }}\n                >\n                    <Grid.Col\n                        span={[4, 4, 4, 4, 4]}\n                        style={{\n                            display: 'flex',\n                            justifyContent: 'right',\n                        }}\n                    >\n                        <Button\n                            text=\"History\"\n                            size=\"large\"\n                            variant=\"outlined\"\n                            intent=\"primary\"\n                            // style={{\n                            //     ...globalStyles.button\n                            // }}\n                            onClick={makeAnOrder}\n                        />\n                    </Grid.Col>\n                </Grid.Row>\n                <Grid.Row\n                    style={{\n                        flexDirection: 'column',\n                        alignItems: 'center'\n                    }}\n                >\n                    {lineItemCards}\n                    <Grid.Row\n                        style={{\n                            justifyContent: 'right',\n                            marginTop: '2rem',\n                            width: '80%',\n                        }}\n                    >\n                        <Grid.Col span={[4, 4, 4, 4, 4]}>\n                            <Typography.Title\n                                style={{\n                                    textAlign: 'right',\n                                }}\n                            >\n                                In total\n                            </Typography.Title>\n                        </Grid.Col>\n                        <Grid.Col span={[4, 4, 4, 4, 4]}>\n                            <Typography.Title\n                                style={{\n                                    textAlign: 'right',\n                                }}\n                            >\n                                {orderTotalPrice.toString()}\n                            </Typography.Title>\n\n                        </Grid.Col>\n                    </Grid.Row>\n                    {\n                        isValidOrder &&\n                        <Grid.Row\n                            style={{\n                                justifyContent: 'right',\n                                marginTop: '2rem',\n                                width: '80%',\n                            }}\n                        >\n                            <Grid.Col\n                                span={[4, 4, 4, 4, 4]}\n                                style={{\n                                    display: 'flex',\n                                    justifyContent: 'right',\n                                }}\n                            >\n                                <Button\n                                    text=\"Order\"\n                                    size=\"large\"\n                                    style={{\n                                        ...globalStyles.button\n                                    }}\n                                    onClick={makeAnOrder}\n                                />\n                            </Grid.Col>\n                        </Grid.Row>\n\n                    }\n                </Grid.Row>\n            </Grid>\n            <ToastContainer />\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}