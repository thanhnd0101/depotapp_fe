{"ast":null,"code":"import { Types } from \"./actionTypes\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  user: {\n    \"token\": {\n      username: ''\n    }\n  }\n};\nexport const loginSlice = createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    LOGIN: (state, action) => {\n      state.user[action.payload.token] = {\n        username: action.payload.username\n      };\n    }\n  }\n});\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case Types.LOGIN:\n      return { ...state,\n        user: action.payload.user\n      };\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/thanhnguyen/EmploymentHero/Demo/depotapp_fe/src/modules/Login/reducers/reducers.ts"],"names":["Types","createSlice","initialState","user","username","loginSlice","name","reducers","LOGIN","state","action","payload","token","reducer","type"],"mappings":"AAAA,SAASA,KAAT,QAAsB,eAAtB;AAEA,SAASC,WAAT,QAA2C,kBAA3C;AAeA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AACF,aAAQ;AACJC,MAAAA,QAAQ,EAAE;AADN;AADN;AADW,CAArB;AAQA,OAAO,MAAMC,UAAU,GAAGJ,WAAW,CAAC;AAClCK,EAAAA,IAAI,EAAE,OAD4B;AAElCJ,EAAAA,YAFkC;AAGlCK,EAAAA,QAAQ,EAAE;AACNC,IAAAA,KAAK,EAAE,CAACC,KAAD,EAAmBC,MAAnB,KAAiD;AACpDD,MAAAA,KAAK,CAACN,IAAN,CAAWO,MAAM,CAACC,OAAP,CAAeC,KAA1B,IAAmC;AAC/BR,QAAAA,QAAQ,EAACM,MAAM,CAACC,OAAP,CAAeP;AADO,OAAnC;AAGH;AALK;AAHwB,CAAD,CAA9B;;AAYP,MAAMS,OAAO,GAAG,CAACJ,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkE;AAC9E,UAAQA,MAAM,CAACI,IAAf;AACI,SAAKd,KAAK,CAACQ,KAAX;AACI,aAAQ,EACJ,GAAGC,KADC;AAEJN,QAAAA,IAAI,EAAEO,MAAM,CAACC,OAAP,CAAeR;AAFjB,OAAR;AAFR;;AAOA,SAAOM,KAAP;AACH,CATD;;AAWA,eAAeI,OAAf","sourcesContent":["import { Types } from \"./actionTypes\"\nimport produce from \"immer\"\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\n\ntype LoginPayLoad = {\n    username:string,\n    token:string\n}\n\ntype userState ={\n    [key:string] : {\n        [key:string] : {\n            username:string\n        }\n    }\n}\n\nconst initialState = {\n    user: {\n        \"token\":{\n            username: '',\n        },\n    }\n}\n\nexport const loginSlice = createSlice({\n    name: 'login',\n    initialState,\n    reducers: {\n        LOGIN: (state: userState, action: PayloadAction<any>) =>{\n            state.user[action.payload.token] = {\n                username:action.payload.username\n            }\n        }\n    }\n});\n\nconst reducer = (state = initialState, action: { type: String, payload: any }) => {\n    switch (action.type) {\n        case Types.LOGIN:\n            return  {\n                ...state,\n                user: action.payload.user\n            }\n    }\n    return state;\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}