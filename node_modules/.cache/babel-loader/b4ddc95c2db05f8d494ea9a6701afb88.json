{"ast":null,"code":"import { Types } from \"./actionTypes\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  user: {\n    username: '',\n    password: '',\n    token: ''\n  }\n};\nexport const loginSlice = createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    LOGIN: (state, action) => {\n      state.user = action.payload;\n    }\n  }\n});\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case Types.LOGIN:\n      return { ...state,\n        user: action.payload.user\n      };\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/thanhnguyen/EmploymentHero/Demo/depotapp_fe/src/modules/Login/reducers/reducers.ts"],"names":["Types","createSlice","initialState","user","username","password","token","loginSlice","name","reducers","LOGIN","state","action","payload","reducer","type"],"mappings":"AAAA,SAASA,KAAT,QAAsB,eAAtB;AAEA,SAASC,WAAT,QAA2C,kBAA3C;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE,EADR;AAEFC,IAAAA,QAAQ,EAAE,EAFR;AAGFC,IAAAA,KAAK,EAAE;AAHL;AADW,CAArB;AAQA,OAAO,MAAMC,UAAU,GAAGN,WAAW,CAAC;AAClCO,EAAAA,IAAI,EAAE,OAD4B;AAElCN,EAAAA,YAFkC;AAGlCO,EAAAA,QAAQ,EAAE;AACNC,IAAAA,KAAK,EAAE,CAACC,KAAD,EAAQC,MAAR,KAA2D;AAC9DD,MAAAA,KAAK,CAACR,IAAN,GAAaS,MAAM,CAACC,OAApB;AACH;AAHK;AAHwB,CAAD,CAA9B;;AAUP,MAAMC,OAAO,GAAG,CAACH,KAAK,GAAGT,YAAT,EAAuBU,MAAvB,KAAkE;AAC9E,UAAQA,MAAM,CAACG,IAAf;AACI,SAAKf,KAAK,CAACU,KAAX;AACI,aAAQ,EACJ,GAAGC,KADC;AAEJR,QAAAA,IAAI,EAAES,MAAM,CAACC,OAAP,CAAeV;AAFjB,OAAR;AAFR;;AAOA,SAAOQ,KAAP;AACH,CATD;;AAWA,eAAeG,OAAf","sourcesContent":["import { Types } from \"./actionTypes\"\nimport produce from \"immer\"\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\n\nconst initialState = {\n    user: {\n        username: '',\n        password: '',\n        token: '',\n    }\n}\n\nexport const loginSlice = createSlice({\n    name: 'login',\n    initialState,\n    reducers: {\n        LOGIN: (state, action: PayloadAction<typeof initialState.user>) =>{\n            state.user = action.payload\n        }\n    }\n});\n\nconst reducer = (state = initialState, action: { type: String, payload: any }) => {\n    switch (action.type) {\n        case Types.LOGIN:\n            return  {\n                ...state,\n                user: action.payload.user\n            }\n    }\n    return state;\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}