{"ast":null,"code":"var _jsxFileName = \"/Users/thanhnguyen/EmploymentHero/Demo/depotapp_fe/src/modules/Dam/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Divider, Grid } from 'hero-design';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getDocsAsync } from './apiCalls/list';\nimport DocumentCard from './components/documentCard';\nimport Header from '../shared/components/header';\nimport DocumentUpload from './components/documentUpload';\nimport { ToastContainer } from 'react-toastify';\nimport { useForceUpdate } from '../utils/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Dam() {\n  _s();\n\n  const [docs, setDocs] = useState([]);\n  const token = useSelector(state => state.user.token);\n  const forceUpdate = useForceUpdate();\n  useEffect(() => {\n    getDocsAsync(token).then(res => {\n      if (res.status == 200) {\n        if (Array.isArray(res.data)) {\n          const dataDeepCopy = res.data.map(doc => Object.assign({}, doc));\n          setDocs(dataDeepCopy);\n        }\n      }\n    });\n  }, []);\n  const docCards = docs.map(doc => {\n    return /*#__PURE__*/_jsxDEV(DocumentCard, {\n      cardInfor: doc\n    }, doc.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n        style: {\n          paddingTop: '2rem'\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid.Col, {\n          span: [20, 20, 20, 20, 20],\n          offset: [17, 17, 17, 17, 17],\n          children: /*#__PURE__*/_jsxDEV(DocumentUpload, {\n            onUploadSuccess: e => {\n              forceUpdate();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n        children: /*#__PURE__*/_jsxDEV(Grid.Col, {\n          span: [20, 20, 20, 20, 20],\n          offset: [3, 3, 3, 3, 3],\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: docCards\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Dam, \"el5znxbIeg3bJg2xpnTJ1Zbt+f8=\", false, function () {\n  return [useSelector, useForceUpdate];\n});\n\n_c = Dam;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dam\");","map":{"version":3,"sources":["/Users/thanhnguyen/EmploymentHero/Demo/depotapp_fe/src/modules/Dam/index.tsx"],"names":["Divider","Grid","React","useEffect","useState","useSelector","getDocsAsync","DocumentCard","Header","DocumentUpload","ToastContainer","useForceUpdate","Dam","docs","setDocs","token","state","user","forceUpdate","then","res","status","Array","isArray","data","dataDeepCopy","map","doc","Object","assign","docCards","id","paddingTop","e"],"mappings":"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","sourcesContent":["import { Divider, Grid } from 'hero-design';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getDocsAsync } from './apiCalls/list';\nimport DocumentCard from './components/documentCard';\nimport Header from '../shared/components/header';\nimport DocumentUpload from './components/documentUpload';\nimport { ToastContainer } from 'react-toastify';\nimport { useForceUpdate } from '../utils/utils';\n\nexport default function Dam() {\n    const [docs, setDocs] = useState<any[]>([]);\n    const token = useSelector((state: any) => state.user.token)\n    const forceUpdate = useForceUpdate()\n    \n    useEffect(() => {\n        getDocsAsync(token)\n            .then(res => {\n                if (res.status == 200) {\n                    if (Array.isArray(res.data)) {\n                        const dataDeepCopy = res.data.map(doc => Object.assign({}, doc))\n                        setDocs(dataDeepCopy)\n                    }\n                }\n            })\n    }, [])\n\n    const docCards = docs.map(doc => {\n        return <DocumentCard key={doc.id} cardInfor={doc} />\n    })\n\n    return (\n        <>\n            <Grid>\n                <Header />\n                <Divider />\n                <Grid.Row style={{ paddingTop: '2rem' }}>\n                    <Grid.Col span={[20, 20, 20, 20, 20]} offset={[17, 17, 17, 17, 17]}>\n                        <DocumentUpload onUploadSuccess={(e)=>{forceUpdate()}}/>\n                    </Grid.Col>\n                </Grid.Row>\n                <Grid.Row>\n                    <Grid.Col span={[20, 20, 20, 20, 20]} offset={[3, 3, 3, 3, 3]}>\n                        <ul>\n                            {docCards}\n                        </ul>\n                    </Grid.Col>\n                </Grid.Row>\n            </Grid>\n            <ToastContainer />\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}