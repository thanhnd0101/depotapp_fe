{"ast":null,"code":"var _jsxFileName = \"/Users/thanhnguyen/EmploymentHero/Demo/depotapp_fe/src/modules/Dam/components/documentDetails/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Grid, Input, Switch } from \"hero-design\";\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { injectStyle } from \"react-toastify/dist/inject-style\";\nimport { updateDocAsync } from \"../../apiCalls/documentDetails/update\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nif (typeof window !== 'undefined') {\n  injectStyle();\n}\n\nexport default function DocumentDetails({\n  doc,\n  setDoc\n}) {\n  _s();\n\n  const [editMode, setEditMode] = useState(false);\n  const token = useSelector(state => state.user.token);\n  const displayedValues = ['Title', 'Description', 'Price', 'Publish'];\n  const detailsInput = ['Title'];\n  const detailsInputElements = detailsInput.map(key => {\n    return /*#__PURE__*/_jsxDEV(Grid.Row, {\n      children: [/*#__PURE__*/_jsxDEV(Grid.Col, {\n        span: [12, 12, 12, 12, 12],\n        children: key\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid.Col, {\n        span: [12, 12, 12, 12, 12],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          disabled: !editMode,\n          name: key,\n          defaultValue: doc[key.toLowerCase()]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  });\n  const [publishState, setPublishState] = useState(doc['publish']);\n\n  const detailsPublishElements = /*#__PURE__*/_jsxDEV(Grid.Row, {\n    children: [/*#__PURE__*/_jsxDEV(Grid.Col, {\n      span: [12, 12, 12, 12, 12],\n      children: \"Publish\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid.Col, {\n      span: [12, 12, 12, 12, 12],\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        icon: \"checkmark\",\n        disabled: !editMode,\n        checked: publishState,\n        onChange: e => setPublishState(e.target.checked),\n        name: 'Publish'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n\n  const detailsInputNumber = ['Price'];\n  const detailsInputNumberElements = detailsInputNumber.map(key => {\n    return /*#__PURE__*/_jsxDEV(Grid.Row, {\n      children: [/*#__PURE__*/_jsxDEV(Grid.Col, {\n        span: [12, 12, 12, 12, 12],\n        children: key\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid.Col, {\n        span: [12, 12, 12, 12, 12],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          onKeyPress: event => {\n            const regex = /[0-9]/;\n\n            if (!regex.test(event.key)) {\n              event.preventDefault();\n            }\n          },\n          disabled: !editMode,\n          name: key,\n          defaultValue: doc[key.toLowerCase()]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  });\n  const detailsAreaText = ['Description'];\n  const detailsAreaTextElements = detailsAreaText.map(key => {\n    return /*#__PURE__*/_jsxDEV(Grid.Row, {\n      children: [/*#__PURE__*/_jsxDEV(Grid.Col, {\n        span: [12, 12, 12, 12, 12],\n        children: key\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid.Col, {\n        span: [12, 12, 12, 12, 12],\n        children: /*#__PURE__*/_jsxDEV(Input.TextArea, {\n          disabled: !editMode,\n          name: key,\n          defaultValue: doc[key.toLowerCase()]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this);\n  });\n\n  function save(e) {\n    e.preventDefault();\n    const gatheredValues = {};\n    displayedValues.forEach(key => {\n      gatheredValues[key.toLowerCase()] = e.target[key].value;\n    });\n    const diffValues = {};\n    displayedValues.forEach(key => {\n      key = key.toLowerCase();\n\n      if (doc[key] !== gatheredValues[key]) {\n        diffValues[key] = gatheredValues[key];\n      }\n    });\n    updateDocAsync(token, doc.id, diffValues).then(res => {\n      console.log(res);\n\n      if (res.status === 200) {\n        toast.success(\"Update successfully\");\n        setDoc(prevState => {\n          Object.keys(gatheredValues.keys).forEach(key => {\n            prevState[key] = gatheredValues[key];\n          });\n        });\n      } else {\n        toast.error(res.data[0].error_message);\n      }\n    });\n    setEditMode(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: save,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        children: [detailsInputElements, detailsAreaTextElements, detailsInputNumberElements, detailsPublishElements, /*#__PURE__*/_jsxDEV(Grid.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: e => setEditMode(true),\n            disabled: editMode,\n            text: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: 'submit',\n            disabled: !editMode,\n            text: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      newestOnTop: false,\n      closeOnClick: true,\n      rtl: false,\n      pauseOnFocusLoss: true,\n      draggable: true,\n      pauseOnHover: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(DocumentDetails, \"jlK9uBi+GyumxKX/OuwtmR8QWhs=\", false, function () {\n  return [useSelector];\n});\n\n_c = DocumentDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"DocumentDetails\");","map":{"version":3,"sources":["/Users/thanhnguyen/EmploymentHero/Demo/depotapp_fe/src/modules/Dam/components/documentDetails/index.tsx"],"names":["Button","Grid","Input","Switch","useState","useSelector","toast","ToastContainer","injectStyle","updateDocAsync","window","DocumentDetails","doc","setDoc","editMode","setEditMode","token","state","user","displayedValues","detailsInput","detailsInputElements","map","key","toLowerCase","publishState","setPublishState","detailsPublishElements","e","target","checked","detailsInputNumber","detailsInputNumberElements","event","regex","test","preventDefault","detailsAreaText","detailsAreaTextElements","save","gatheredValues","forEach","value","diffValues","id","then","res","console","log","status","success","prevState","Object","keys","error","data","error_message"],"mappings":";;;AAAA,SAAuBA,MAAvB,EAA+BC,IAA/B,EAAqCC,KAArC,EAA4CC,MAA5C,QAAiE,aAAjE;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,KAAT,EAAgBC,cAAhB,QAAsC,gBAAtC;AACA,SAASC,WAAT,QAA4B,kCAA5B;AACA,SAASC,cAAT,QAA+B,uCAA/B;;;;AACA,IAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AAC/BF,EAAAA,WAAW;AACd;;AAED,eAAe,SAASG,eAAT,CAAyB;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAzB,EAAyE;AAAA;;AACpF,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAMY,KAAK,GAAGX,WAAW,CAAEY,KAAD,IAAgBA,KAAK,CAACC,IAAN,CAAWF,KAA5B,CAAzB;AAEA,QAAMG,eAAe,GAAG,CAAC,OAAD,EAAU,aAAV,EAAyB,OAAzB,EAAkC,SAAlC,CAAxB;AAEA,QAAMC,YAAY,GAAG,CAAC,OAAD,CAArB;AACA,QAAMC,oBAAoB,GAAGD,YAAY,CAACE,GAAb,CAAiBC,GAAG,IAAI;AACjD,wBACI,QAAC,IAAD,CAAM,GAAN;AAAA,8BACI,QAAC,IAAD,CAAM,GAAN;AAAU,QAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,CAAhB;AAAA,kBACKA;AADL;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,IAAD,CAAM,GAAN;AAAU,QAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,CAAhB;AAAA,+BACI,QAAC,KAAD;AAAO,UAAA,QAAQ,EAAE,CAACT,QAAlB;AAA4B,UAAA,IAAI,EAAES,GAAlC;AAAuC,UAAA,YAAY,EAAEX,GAAG,CAACW,GAAG,CAACC,WAAJ,EAAD;AAAxD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA,OAAeD,GAAf;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH,GAZ4B,CAA7B;AAcA,QAAM,CAACE,YAAD,EAAeC,eAAf,IAAkCtB,QAAQ,CAACQ,GAAG,CAAC,SAAD,CAAJ,CAAhD;;AAEA,QAAMe,sBAAsB,gBACxB,QAAC,IAAD,CAAM,GAAN;AAAA,4BACI,QAAC,IAAD,CAAM,GAAN;AAAU,MAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,IAAD,CAAM,GAAN;AAAU,MAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,CAAhB;AAAA,6BACI,QAAC,MAAD;AACI,QAAA,IAAI,EAAC,WADT;AAEI,QAAA,QAAQ,EAAE,CAACb,QAFf;AAGI,QAAA,OAAO,EAAEW,YAHb;AAII,QAAA,QAAQ,EAAGG,CAAD,IAAOF,eAAe,CAACE,CAAC,CAACC,MAAF,CAASC,OAAV,CAJpC;AAKI,QAAA,IAAI,EAAE;AALV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;;AAkBA,QAAMC,kBAAkB,GAAG,CAAC,OAAD,CAA3B;AACA,QAAMC,0BAA0B,GAAGD,kBAAkB,CAACT,GAAnB,CAAuBC,GAAG,IAAI;AAC7D,wBACI,QAAC,IAAD,CAAM,GAAN;AAAA,8BACI,QAAC,IAAD,CAAM,GAAN;AAAU,QAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,CAAhB;AAAA,kBACKA;AADL;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,IAAD,CAAM,GAAN;AAAU,QAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,CAAhB;AAAA,+BACI,QAAC,KAAD;AACI,UAAA,UAAU,EAAGU,KAAD,IAAW;AACnB,kBAAMC,KAAK,GAAG,OAAd;;AACA,gBAAI,CAACA,KAAK,CAACC,IAAN,CAAWF,KAAK,CAACV,GAAjB,CAAL,EAA4B;AACxBU,cAAAA,KAAK,CAACG,cAAN;AACH;AACJ,WANL;AAOI,UAAA,QAAQ,EAAE,CAACtB,QAPf;AAQI,UAAA,IAAI,EAAES,GARV;AASI,UAAA,YAAY,EAAEX,GAAG,CAACW,GAAG,CAACC,WAAJ,EAAD;AATrB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA,OAAeD,GAAf;AAAA;AAAA;AAAA;AAAA,YADJ;AAoBH,GArBkC,CAAnC;AAuBA,QAAMc,eAAe,GAAG,CAAC,aAAD,CAAxB;AACA,QAAMC,uBAAuB,GAAGD,eAAe,CAACf,GAAhB,CAAoBC,GAAG,IAAI;AACvD,wBACI,QAAC,IAAD,CAAM,GAAN;AAAA,8BACI,QAAC,IAAD,CAAM,GAAN;AAAU,QAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,CAAhB;AAAA,kBACKA;AADL;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,IAAD,CAAM,GAAN;AAAU,QAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,CAAhB;AAAA,+BACI,QAAC,KAAD,CAAO,QAAP;AACI,UAAA,QAAQ,EAAE,CAACT,QADf;AAEI,UAAA,IAAI,EAAES,GAFV;AAGI,UAAA,YAAY,EAAEX,GAAG,CAACW,GAAG,CAACC,WAAJ,EAAD;AAHrB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA,OAAeD,GAAf;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH,GAf+B,CAAhC;;AAiBA,WAASgB,IAAT,CAAcX,CAAd,EAAsB;AAClBA,IAAAA,CAAC,CAACQ,cAAF;AAEA,UAAMI,cAEL,GAAG,EAFJ;AAGArB,IAAAA,eAAe,CAACsB,OAAhB,CAAwBlB,GAAG,IAAI;AAC3BiB,MAAAA,cAAc,CAACjB,GAAG,CAACC,WAAJ,EAAD,CAAd,GAAoCI,CAAC,CAACC,MAAF,CAASN,GAAT,EAAcmB,KAAlD;AACH,KAFD;AAIA,UAAMC,UAEL,GAAG,EAFJ;AAGAxB,IAAAA,eAAe,CAACsB,OAAhB,CAAwBlB,GAAG,IAAI;AAC3BA,MAAAA,GAAG,GAAGA,GAAG,CAACC,WAAJ,EAAN;;AACA,UAAIZ,GAAG,CAACW,GAAD,CAAH,KAAaiB,cAAc,CAACjB,GAAD,CAA/B,EAAsC;AAClCoB,QAAAA,UAAU,CAACpB,GAAD,CAAV,GAAkBiB,cAAc,CAACjB,GAAD,CAAhC;AACH;AACJ,KALD;AAOAd,IAAAA,cAAc,CAACO,KAAD,EAAQJ,GAAG,CAACgC,EAAZ,EAAgBD,UAAhB,CAAd,CACKE,IADL,CACUC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AACA,UAAIA,GAAG,CAACG,MAAJ,KAAe,GAAnB,EAAwB;AACpB3C,QAAAA,KAAK,CAAC4C,OAAN,CAAc,qBAAd;AACArC,QAAAA,MAAM,CAAEsC,SAAD,IAAkB;AACrBC,UAAAA,MAAM,CAACC,IAAP,CAAYb,cAAc,CAACa,IAA3B,EAAiCZ,OAAjC,CAAyClB,GAAG,IAAG;AAC3C4B,YAAAA,SAAS,CAAC5B,GAAD,CAAT,GAAiBiB,cAAc,CAACjB,GAAD,CAA/B;AACH,WAFD;AAGH,SAJK,CAAN;AAKH,OAPD,MAQK;AACDjB,QAAAA,KAAK,CAACgD,KAAN,CAAaR,GAAG,CAACS,IAAL,CAAyB,CAAzB,EAA4BC,aAAxC;AACH;AACJ,KAdL;AAeAzC,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH;;AAED,sBACI;AAAA,4BACI;AAAM,MAAA,QAAQ,EAAEwB,IAAhB;AAAA,6BACI,QAAC,IAAD;AAAA,mBACKlB,oBADL,EAEKiB,uBAFL,EAGKN,0BAHL,EAIKL,sBAJL,eAKI,QAAC,IAAD,CAAM,GAAN;AAAA,kCACI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAGC,CAAD,IAAOb,WAAW,CAAC,IAAD,CAAnC;AAA2C,YAAA,QAAQ,EAAED,QAArD;AAA+D,YAAA,IAAI,EAAE;AAArE;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAE,QAAd;AAAwB,YAAA,QAAQ,EAAE,CAACA,QAAnC;AAA6C,YAAA,IAAI,EAAE;AAAnD;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAaI,QAAC,cAAD;AACI,MAAA,QAAQ,EAAC,WADb;AAEI,MAAA,SAAS,EAAE,IAFf;AAGI,MAAA,eAAe,EAAE,KAHrB;AAII,MAAA,WAAW,EAAE,KAJjB;AAKI,MAAA,YAAY,MALhB;AAMI,MAAA,GAAG,EAAE,KANT;AAOI,MAAA,gBAAgB,MAPpB;AAQI,MAAA,SAAS,MARb;AASI,MAAA,YAAY;AAThB;AAAA;AAAA;AAAA;AAAA,YAbJ,eAwBI,QAAE,cAAF;AAAA;AAAA;AAAA;AAAA,YAxBJ;AAAA,kBADJ;AA6BH;;GAtJuBH,e;UAENN,W;;;KAFMM,e","sourcesContent":["import { Notification, Button, Grid, Input, Switch, Modal } from \"hero-design\";\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { injectStyle } from \"react-toastify/dist/inject-style\";\nimport { updateDocAsync } from \"../../apiCalls/documentDetails/update\";\nif (typeof window !== 'undefined') {\n    injectStyle()\n}\n\nexport default function DocumentDetails({ doc, setDoc }: { doc: any, setDoc:Function }) {\n    const [editMode, setEditMode] = useState(false);\n    const token = useSelector((state: any) => state.user.token)\n\n    const displayedValues = ['Title', 'Description', 'Price', 'Publish']\n\n    const detailsInput = ['Title']\n    const detailsInputElements = detailsInput.map(key => {\n        return (\n            <Grid.Row key={key}>\n                <Grid.Col span={[12, 12, 12, 12, 12]}>\n                    {key}\n                </Grid.Col>\n                <Grid.Col span={[12, 12, 12, 12, 12]}>\n                    <Input disabled={!editMode} name={key} defaultValue={doc[key.toLowerCase()]}>\n                    </Input>\n                </Grid.Col>\n            </Grid.Row>\n        )\n    })\n\n    const [publishState, setPublishState] = useState(doc['publish'])\n\n    const detailsPublishElements = (\n        <Grid.Row>\n            <Grid.Col span={[12, 12, 12, 12, 12]}>\n                Publish\n            </Grid.Col>\n            <Grid.Col span={[12, 12, 12, 12, 12]}>\n                <Switch\n                    icon=\"checkmark\"\n                    disabled={!editMode}\n                    checked={publishState}\n                    onChange={(e) => setPublishState(e.target.checked)}\n                    name={'Publish'}\n                />\n            </Grid.Col>\n        </Grid.Row>\n    )\n\n\n    const detailsInputNumber = ['Price']\n    const detailsInputNumberElements = detailsInputNumber.map(key => {\n        return (\n            <Grid.Row key={key}>\n                <Grid.Col span={[12, 12, 12, 12, 12]}>\n                    {key}\n                </Grid.Col>\n                <Grid.Col span={[12, 12, 12, 12, 12]}>\n                    <Input\n                        onKeyPress={(event) => {\n                            const regex = /[0-9]/\n                            if (!regex.test(event.key)) {\n                                event.preventDefault()\n                            }\n                        }}\n                        disabled={!editMode}\n                        name={key}\n                        defaultValue={doc[key.toLowerCase()]}>\n                    </Input>\n                </Grid.Col>\n            </Grid.Row>\n        )\n    })\n\n    const detailsAreaText = ['Description']\n    const detailsAreaTextElements = detailsAreaText.map(key => {\n        return (\n            <Grid.Row key={key}>\n                <Grid.Col span={[12, 12, 12, 12, 12]}>\n                    {key}\n                </Grid.Col>\n                <Grid.Col span={[12, 12, 12, 12, 12]}>\n                    <Input.TextArea\n                        disabled={!editMode}\n                        name={key}\n                        defaultValue={doc[key.toLowerCase()]}>\n                    </Input.TextArea>\n                </Grid.Col>\n            </Grid.Row>\n        )\n    })\n\n    function save(e: any) {\n        e.preventDefault()\n\n        const gatheredValues: {\n            [key: string]: string | number\n        } = {}\n        displayedValues.forEach(key => {\n            gatheredValues[key.toLowerCase()] = e.target[key].value\n        })\n\n        const diffValues: {\n            [key: string]: string | number\n        } = {}\n        displayedValues.forEach(key => {\n            key = key.toLowerCase();\n            if (doc[key] !== gatheredValues[key]) {\n                diffValues[key] = gatheredValues[key]\n            }\n        })\n\n        updateDocAsync(token, doc.id, diffValues)\n            .then(res => {\n                console.log(res)\n                if (res.status === 200) {\n                    toast.success(\"Update successfully\")\n                    setDoc((prevState:any) =>{\n                        Object.keys(gatheredValues.keys).forEach(key =>{\n                            prevState[key] = gatheredValues[key]\n                        })\n                    })\n                }\n                else {\n                    toast.error((res.data as Array<any>)[0].error_message)\n                }\n            })\n        setEditMode(false)\n    }\n\n    return (\n        <>\n            <form onSubmit={save}>\n                <Grid>\n                    {detailsInputElements}\n                    {detailsAreaTextElements}\n                    {detailsInputNumberElements}\n                    {detailsPublishElements}\n                    <Grid.Row>\n                        <Button onClick={(e) => setEditMode(true)} disabled={editMode} text={\"Edit\"} />\n                        <Button type={'submit'} disabled={!editMode} text={\"Save\"} />\n                    </Grid.Row>\n                </Grid>\n            </form>\n            <ToastContainer\n                position=\"top-right\"\n                autoClose={5000}\n                hideProgressBar={false}\n                newestOnTop={false}\n                closeOnClick\n                rtl={false}\n                pauseOnFocusLoss\n                draggable\n                pauseOnHover\n            />\n            < ToastContainer />\n        </>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}