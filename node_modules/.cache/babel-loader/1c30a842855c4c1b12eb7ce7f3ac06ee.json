{"ast":null,"code":"var _jsxFileName = \"/Users/thanhnguyen/EmploymentHero/Demo/depotapp_fe/src/modules/Profile/components/profileCard/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Grid, Input } from \"hero-design\";\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { injectStyle } from \"react-toastify/dist/inject-style\";\nimport { updateUserAsync } from \"../../apiCalls/profileCard/updateUser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nif (typeof window !== 'undefined') {\n  injectStyle();\n}\n\nexport default function ProfileCard({\n  user,\n  refresh\n}) {\n  _s();\n\n  const [editMode, setEditMode] = useState(false);\n  const token = useSelector(state => state.user.token);\n  const displayValues = ['Email', 'Address'];\n  const detailsInput = ['Email', 'Address'];\n  const detailsInputElements = detailsInput.map(key => {\n    return /*#__PURE__*/_jsxDEV(Grid.Row, {\n      children: [/*#__PURE__*/_jsxDEV(Grid.Col, {\n        span: [12, 12, 12, 12, 12],\n        children: key\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid.Col, {\n        span: [12, 12, 12, 12, 12],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          disabled: !editMode,\n          name: key,\n          defaultValue: user[key.toLowerCase()]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  });\n  const disableddetailsInput = ['Name'];\n  const disableddetailsInputElements = disableddetailsInput.map(key => {\n    console.log(key, user, user[key.toLowerCase()]);\n    return /*#__PURE__*/_jsxDEV(Grid.Row, {\n      children: [/*#__PURE__*/_jsxDEV(Grid.Col, {\n        span: [12, 12, 12, 12, 12],\n        children: key\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid.Col, {\n        span: [12, 12, 12, 12, 12],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          disabled: true,\n          name: key,\n          defaultValue: user[key.toLowerCase()]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  });\n\n  function save(e) {\n    e.preventDefault();\n    const gatheredValues = {};\n    displayValues.forEach(key => {\n      gatheredValues[key.toLowerCase()] = e.target[key].value;\n    });\n    const diffValues = {};\n    displayValues.forEach(key => {\n      key = key.toLowerCase();\n\n      if (user[key] !== gatheredValues[key]) {\n        diffValues[key] = gatheredValues[key];\n      }\n    });\n    const payload = { ...user,\n      ...diffValues\n    };\n\n    if (payload['publish'] && !payload['price']) {\n      toast.error('Cannot publish with no price');\n    } else {\n      updateUserAsync(token, user.id, payload);\n      setEditMode(false);\n      refresh();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: save,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        children: [disableddetailsInputElements, detailsInputElements, /*#__PURE__*/_jsxDEV(Grid.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: e => setEditMode(true),\n            disabled: editMode,\n            text: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: 'submit',\n            disabled: !editMode,\n            text: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      newestOnTop: false,\n      closeOnClick: true,\n      rtl: false,\n      pauseOnFocusLoss: true,\n      draggable: true,\n      pauseOnHover: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ProfileCard, \"4/wFoP+d5QU2+1kYizvrIx96xcQ=\", false, function () {\n  return [useSelector];\n});\n\n_c = ProfileCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileCard\");","map":{"version":3,"sources":["/Users/thanhnguyen/EmploymentHero/Demo/depotapp_fe/src/modules/Profile/components/profileCard/index.tsx"],"names":["Button","Grid","Input","useState","useSelector","toast","ToastContainer","injectStyle","updateUserAsync","window","ProfileCard","user","refresh","editMode","setEditMode","token","state","displayValues","detailsInput","detailsInputElements","map","key","toLowerCase","disableddetailsInput","disableddetailsInputElements","console","log","save","e","preventDefault","gatheredValues","forEach","target","value","diffValues","payload","error","id"],"mappings":"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","sourcesContent":["import { Button, Grid, Input } from \"hero-design\";\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { injectStyle } from \"react-toastify/dist/inject-style\";\nimport { updateUserAsync } from \"../../apiCalls/profileCard/updateUser\";\nif (typeof window !== 'undefined') {\n    injectStyle()\n}\n\nexport default function ProfileCard({user, refresh}:{user:any, refresh:Function}) {\n\n    const [editMode, setEditMode] = useState(false);\n    const token = useSelector((state: any) => state.user.token)\n\n    const displayValues = ['Email', 'Address']\n\n    const detailsInput = ['Email', 'Address']\n    const detailsInputElements = detailsInput.map(key => {\n        return (\n            <Grid.Row key={key}>\n                <Grid.Col span={[12, 12, 12, 12, 12]}>\n                    {key}\n                </Grid.Col>\n                <Grid.Col span={[12, 12, 12, 12, 12]}>\n                    <Input disabled={!editMode} name={key} defaultValue={user[key.toLowerCase()]}>\n                    </Input>\n                </Grid.Col>\n            </Grid.Row>\n        )\n    })\n    const disableddetailsInput = ['Name']\n    const disableddetailsInputElements = disableddetailsInput.map(key => {\n        console.log(key, user, user[key.toLowerCase()])\n        return (\n            <Grid.Row key={key}>\n                <Grid.Col span={[12, 12, 12, 12, 12]}>\n                    {key}\n                </Grid.Col>\n                <Grid.Col span={[12, 12, 12, 12, 12]}>\n                    <Input disabled name={key} defaultValue={user[key.toLowerCase()]}>\n                    </Input>\n                </Grid.Col>\n            </Grid.Row>\n        )\n    })\n\n    function save(e: any) {\n        e.preventDefault()\n\n        const gatheredValues: {\n            [key: string]: string | number\n        } = {}\n        displayValues.forEach(key => {\n            gatheredValues[key.toLowerCase()] = e.target[key].value\n        })\n        \n        const diffValues: {\n            [key: string]: string | number\n        } = {}\n        displayValues.forEach(key => {\n            key = key.toLowerCase();\n            if (user[key] !== gatheredValues[key]) {\n                diffValues[key] = gatheredValues[key]\n            }\n        })\n\n        const payload =\n        {\n            ...user,\n            ...diffValues\n        }\n\n        if (payload['publish'] && !payload['price']) {\n            toast.error('Cannot publish with no price')\n        }\n        else {\n            updateUserAsync(token, user.id, payload)\n            setEditMode(false)\n            refresh()\n        }\n\n    }\n\n    return (\n        <>\n            <form onSubmit={save}>\n                <Grid>\n                    {disableddetailsInputElements}\n                    {detailsInputElements}\n                    <Grid.Row>\n                        <Button onClick={(e) => setEditMode(true)} disabled={editMode} text={\"Edit\"} />\n                        <Button type={'submit'} disabled={!editMode} text={\"Save\"} />\n                    </Grid.Row>\n                </Grid>\n            </form>\n            <ToastContainer\n                position=\"top-right\"\n                autoClose={5000}\n                hideProgressBar={false}\n                newestOnTop={false}\n                closeOnClick\n                rtl={false}\n                pauseOnFocusLoss\n                draggable\n                pauseOnHover\n            />\n            < ToastContainer />\n        </>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}