{"version":3,"file":"react-tidy.cjs.production.min.js","sources":["../src/utils/isFunction.ts","../src/utils/isInBrowser.ts","../src/useStorage/defaultStorage.ts","../src/useStorage/createMemoryStorage.ts","../src/useIsMounted/useIsMounted.ts","../src/useRefresh/useRefresh.ts","../src/useInstance/makeProxy.ts","../src/useInstance/useInstance.ts","../src/usePrevious/usePrevious.ts","../src/useStorage/useStorage.ts"],"sourcesContent":["export function isFunction<T>(x: T): T extends Function ? true : false\nexport function isFunction(x: any) {\n  return !!x && {}.toString.call(x) === '[object Function]'\n}\n","export function isInBrowser() {\n  return typeof window === 'object' && typeof document === 'object'\n}\n","import {isInBrowser} from '../utils'\nimport {createMemoryStorage} from './createMemoryStorage'\n\ntype LazyStorage = Storage | (() => Storage)\n\nlet defaultStorage: LazyStorage\nif (isInBrowser()) {\n  defaultStorage = window.localStorage\n} else {\n  defaultStorage = createMemoryStorage()\n}\n\nexport function getDefaultStorage() {\n  return defaultStorage\n}\nexport function setDefaultStorage(storage: LazyStorage) {\n  defaultStorage = storage\n}\n","export const createMemoryStorage = (): Storage => {\n  return new MemoryStorage()\n}\n\nclass MemoryStorage implements Storage {\n  protected memory: {[key: string]: string} = {}\n\n  public get length() {\n    return Object.keys(this.memory).length\n  }\n\n  public getItem(key: string) {\n    return this.memory[key] || null\n  }\n\n  public setItem(key: string, value: string) {\n    this.memory[key] = value\n  }\n\n  public removeItem(key: string) {\n    delete this.memory[key]\n  }\n\n  public key(index: number) {\n    const keys = Object.keys(this.memory)\n    return keys[index] || null\n  }\n\n  public clear() {\n    this.memory = {}\n  }\n}\n","import React from 'react'\n\nexport function useIsMounted() {\n  const ref = React.useRef(true)\n  React.useEffect(() => {\n    return () => {\n      ref.current = false\n    }\n  }, [])\n  return React.useCallback(() => ref.current, [])\n}\n","import React from 'react'\nimport {useIsMounted} from '../useIsMounted/useIsMounted'\n\nexport function useRefresh() {\n  const [, setVersion] = React.useState(0)\n  const isMounted = useIsMounted()\n  return () => {\n    if (isMounted()) {\n      setVersion((x) => x + 1)\n    }\n  }\n}\n","const proxySymbol = Symbol()\n\nexport function makeProxy<T extends {}>(target: T, notify: () => void): T {\n  if ((target as any)[proxySymbol] === true) {\n    return target\n  }\n  return new Proxy(target, {\n    get: makeTrap('get', notify),\n    defineProperty: makeTrap('defineProperty', notify),\n    deleteProperty: makeTrap('deleteProperty', notify),\n  })\n}\n\nfunction makeTrap(trap: keyof typeof Reflect, notify: () => void) {\n  return (...args: any[]) => {\n    if (trap === 'get' && args[1] === proxySymbol) {\n      return true\n    }\n    const original = Reflect[trap] as any\n    let result = original(...args)\n    if (trap === 'get' && typeof result === 'object' && result !== null) {\n      result = makeProxy(result, notify)\n    }\n    if (trap !== 'get') {\n      notify()\n    }\n    return result\n  }\n}\n","import React from 'react'\nimport {makeProxy} from './makeProxy'\nimport {useRefresh} from '../useRefresh/useRefresh'\n\ntype ClassType<T, Args extends any[]> = {\n  new (...args: Args): T\n}\n\nexport function useInstance<T, Args extends any[]>(Class: ClassType<T, Args>, ...args: Args) {\n  const refresh = useRefresh()\n  const instance = React.useMemo<T>(() => makeProxy(new Class(...args), refresh), args)\n  React.useEffect(() => {\n    const currentInstance = instance as any\n    return () => currentInstance.cleanup && currentInstance.cleanup()\n  }, args)\n  return instance\n}\n","import React from 'react'\n\nexport function usePrevious<T>(value: T, count = 1) {\n  const [history, setHistory] = React.useState<T[]>([])\n  React.useEffect(() => {\n    if (history.length > count) {\n      history.pop()\n    }\n    setHistory([value, ...history])\n  }, [value])\n  return history.slice(1)\n}\n","import React, {useMemo} from 'react'\nimport {isFunction, isInBrowser} from '../utils'\nimport {getDefaultStorage} from './defaultStorage'\nimport {createMemoryStorage} from './createMemoryStorage'\nimport {useIsMounted} from '../useIsMounted/useIsMounted'\n\ntype Value<T> = T | null | ((x: T | null) => T | null)\n\nexport function useStorage<T>(key: string, defaultValue: T | null = null, getStorage = getDefaultStorage()) {\n  const isMounted = useIsMounted()\n  const storage = useMemo<Storage>(() => {\n    if (!isInBrowser()) return createMemoryStorage()\n    if (isFunction(getStorage)) return (getStorage as any)()\n    return getStorage\n  }, [getStorage])\n  const initialValue = useMemo(() => {\n    const storedString = storage.getItem(key)\n    return storedString === null ? defaultValue : JSON.parse(storedString)\n  }, [storage, key, defaultValue])\n\n  const [value, setValue] = React.useState<T | null>(initialValue)\n\n  React.useEffect(() => {\n    storage.setItem(key, JSON.stringify(initialValue))\n  }, [key, initialValue])\n\n  const setItem = React.useCallback(\n    (newValue: Value<T>) => {\n      if (isFunction(newValue)) {\n        newValue = (newValue as any)(value)\n      }\n      if (newValue === null) {\n        storage.removeItem(key)\n      } else {\n        storage.setItem(key, JSON.stringify(newValue))\n      }\n      if (isMounted()) {\n        setValue(newValue)\n      }\n    },\n    [storage, key, value]\n  )\n\n  return [value, setItem] as [T | null, typeof setItem]\n}\n"],"names":["isFunction","x","toString","call","isInBrowser","window","document","defaultStorage","createMemoryStorage","MemoryStorage","getItem","key","this","memory","setItem","value","removeItem","index","Object","keys","clear","length","getDefaultStorage","useIsMounted","ref","React","useRef","useEffect","current","useCallback","useRefresh","setVersion","useState","isMounted","localStorage","proxySymbol","Symbol","makeProxy","target","notify","Proxy","get","makeTrap","defineProperty","deleteProperty","trap","original","Reflect","result","storage","Class","args","refresh","instance","useMemo","currentInstance","cleanup","count","history","setHistory","pop","slice","defaultValue","getStorage","initialValue","storedString","JSON","parse","setValue","stringify","newValue"],"mappings":"6JACgBA,EAAWC,WAChBA,GAA6B,sBAAxB,GAAGC,SAASC,KAAKF,YCFjBG,UACW,iBAAXC,QAA2C,iBAAbC,iiBCI1CC,ECLSC,EAAsB,kBAC1B,IAAIC,GAGPA,sCACwC,gCAMrCC,QAAA,SAAQC,UACNC,KAAKC,OAAOF,IAAQ,QAGtBG,QAAA,SAAQH,EAAaI,QACrBF,OAAOF,GAAOI,KAGdC,WAAA,SAAWL,UACTC,KAAKC,OAAOF,MAGdA,IAAA,SAAIM,UACIC,OAAOC,KAAKP,KAAKC,QAClBI,IAAU,QAGjBG,MAAA,gBACAP,OAAS,0BAtBhB,kBACSK,OAAOC,KAAKP,KAAKC,QAAQQ,qMDIpC,SAAgBC,WACPf,WEXOgB,QACRC,EAAMC,EAAMC,QAAO,UACzBD,EAAME,WAAU,kBACP,WACLH,EAAII,SAAU,KAEf,IACIH,EAAMI,aAAY,kBAAML,EAAII,UAAS,aCN9BE,QACLC,EAAcN,EAAMO,SAAS,MAChCC,EAAYV,WACX,WACDU,KACFF,GAAW,SAAC9B,UAAMA,EAAI,MHD1BM,EADEH,IACeC,OAAO6B,aAEP1B,IITnB,IAAM2B,EAAcC,kBAEJC,EAAwBC,EAAWC,UACZ,IAAhCD,EAAeH,GACXG,EAEF,IAAIE,MAAMF,EAAQ,CACvBG,IAAKC,EAAS,MAAOH,GACrBI,eAAgBD,EAAS,iBAAkBH,GAC3CK,eAAgBF,EAAS,iBAAkBH,KAI/C,SAASG,EAASG,EAA4BN,UACrC,cACQ,QAATM,+CAA8BV,SACzB,MAEHW,EAAWC,QAAQF,GACrBG,EAASF,gCACA,QAATD,GAAoC,iBAAXG,GAAkC,OAAXA,IAClDA,EAASX,EAAUW,EAAQT,IAEhB,QAATM,GACFN,IAEKS,gGJXuBC,GAChC1C,EAAiB0C,gCKRgCC,8BAA8BC,mCAAAA,wBACzEC,EAAUtB,IACVuB,EAAW5B,EAAM6B,SAAW,kBAAMjB,IAAca,EAASC,GAAOC,KAAUD,UAChF1B,EAAME,WAAU,eACR4B,EAAkBF,SACjB,kBAAME,EAAgBC,SAAWD,EAAgBC,aACvDL,GACIE,uDCbsBtC,EAAU0C,YAAAA,IAAAA,EAAQ,SACjBhC,EAAMO,SAAc,IAA3C0B,OAASC,cAChBlC,EAAME,WAAU,WACV+B,EAAQrC,OAASoC,GACnBC,EAAQE,MAEVD,GAAY5C,UAAU2C,MACrB,CAAC3C,IACG2C,EAAQG,MAAM,qDCFOlD,EAAamD,EAA+BC,YAA/BD,IAAAA,EAAyB,eAAMC,IAAAA,EAAazC,SAC/EW,EAAYV,IACZ0B,EAAUK,WAAiB,kBAC1BlD,IACDJ,EAAW+D,GAAqBA,IAC7BA,EAFoBvD,MAG1B,CAACuD,IACEC,EAAeV,WAAQ,eACrBW,EAAehB,EAAQvC,QAAQC,UACb,OAAjBsD,EAAwBH,EAAeI,KAAKC,MAAMF,KACxD,CAAChB,EAAStC,EAAKmD,MAEQrC,EAAMO,SAAmBgC,GAA5CjD,OAAOqD,OAEd3C,EAAME,WAAU,WACdsB,EAAQnC,QAAQH,EAAKuD,KAAKG,UAAUL,MACnC,CAACrD,EAAKqD,QAEHlD,EAAUW,EAAMI,aACpB,SAACyC,GACKtE,EAAWsE,KACbA,EAAYA,EAAiBvD,IAEd,OAAbuD,EACFrB,EAAQjC,WAAWL,GAEnBsC,EAAQnC,QAAQH,EAAKuD,KAAKG,UAAUC,IAElCrC,KACFmC,EAASE,KAGb,CAACrB,EAAStC,EAAKI,UAGV,CAACA,EAAOD"}