import { ReactElement } from 'react';
import { IconName } from '../Icon';
import { CommonProps } from '../common';
export interface TimePickerProps extends Omit<CommonProps, 'id'> {
    /**
     * Whether the picker is disabled.
     */
    disabled?: boolean;
    /**
     * Time format. Following date-fns's format (https://date-fns.org/v2.16.1/docs/format).
     */
    format?: string;
    /**
     * Id of <input> element.
     */
    id?: string;
    /**
     * Whether the input is invalid.
     */
    invalid?: boolean;
    /**
     * Minute interval.
     */
    minuteStep?: 1 | 5 | 10 | 15 | 20 | 30 | 60;
    /**
     * Name of <input> element, is used to refer to the form data for submission.
     */
    name?: string;
    /**
     * onChange event handler.
     */
    onChange?: (value: string) => void;
    /**
     * Placeholder text in the absence of any value.
     */
    placeholder?: string;
    /**
     * Name of Icon or an Icon element to render on the left side of the input, before the user's cursor.
     */
    prefix?: IconName | ReactElement;
    /**
     * The size of the input box.
     */
    size?: 'small' | 'medium' | 'large';
    /**
     * Current selected time which must be in correct format.
     */
    value?: string;
    /**
     * Whether to use 12-hour system. This only works if `format` is not defined.
     */
    with12Hours?: boolean;
    /**
     * Whether to show seconds.
     */
    withSeconds?: boolean;
}
declare const TimePicker: ({ size, onChange, invalid, placeholder, prefix, disabled, value, format, withSeconds, with12Hours, name, id, className, style, "data-test-id": dataTestId, minuteStep, }: TimePickerProps) => ReactElement;
export default TimePicker;
