import { ReactElement } from 'react';
import { CommonProps } from '../common';
export interface TagProps extends CommonProps {
    /**
     * Visual intent color to apply to tag. It is required for `filled` and `outlined` variants.
     */
    intent?: 'primary' | 'success' | 'danger' | 'warning' | 'error';
    /**
     * Click handler for remove button, receiving tag's text and value.
     */
    onRemove?: (tag: {
        text: string | ReactElement;
        value?: string | number;
    }) => void;
    /**
     * Tag size.
     */
    size?: 'small' | 'medium' | 'large';
    /**
     * Tag label.
     */
    text: string | ReactElement;
    /**
     * Tag's uniq value. Use this when you wish to use removable tag to accientally remove tag with same text.
     */
    value?: string | number;
    /**
     * Tag type.
     */
    variant?: 'basic' | 'filled' | 'outlined';
}
declare const Tag: ({ value, text, variant, intent, size, onRemove, id, className, style, "data-test-id": dataTestId, }: TagProps) => ReactElement;
export default Tag;
