import React, { ChangeEvent, ReactElement } from 'react';

import {
  StyledSelectButton,
  StyledInput,
  StyledInputText,
} from './StyledSelectButton';

import { CommonProps } from '../common';

export interface SelectButtonProps extends Omit<CommonProps, 'id'> {
  /**
   * Specify whether the option is disabled.
   */
  disabled?: boolean;
  /**
   * Id of <input> element.
   */
  id?: string;
  /**
   * Name of <input> element, is used to refer to the form data for submission.
   */
  name?: string;
  /**
   * Change event handler. Use `event.target.checked` to see whether the button will be changed to checked.
   */
  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;
  /**
   * Whether the button is being chosen.
   */
  selected?: boolean;
  /**
   * The size of the select button.
   */
  size?: 'small' | 'medium' | 'large';
  /**
   * Label of the select button.
   */
  text: string | ReactElement;
  /**
   * Value of the select button option.
   */
  value: string | number;
  /**
   * Button type.
   */
  variant?: 'filled' | 'outlined';
}

const SelectButton = ({
  text,
  value,
  selected,
  disabled,
  onChange,
  size = 'medium',
  variant = 'filled',
  name,
  id,
  className,
  style,
  'data-test-id': dataTestId,
}: SelectButtonProps): ReactElement => (
  <StyledSelectButton
    className={className}
    style={style}
    data-test-id={dataTestId}
  >
    <StyledInput
      type="radio"
      checked={selected}
      value={value}
      name={name}
      disabled={disabled}
      onChange={onChange}
      themeVariant={variant}
      id={id}
    />
    <StyledInputText themeSize={size}>{text}</StyledInputText>
  </StyledSelectButton>
);

export default SelectButton;
