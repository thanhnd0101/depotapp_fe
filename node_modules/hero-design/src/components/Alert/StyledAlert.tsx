import styled, { css } from 'styled-components';

type FilledIntent =
  | 'filled-success'
  | 'filled-info'
  | 'filled-warning'
  | 'filled-danger'
  | 'filled-error';

type OutlinedIntent =
  | 'outlined-success'
  | 'outlined-info'
  | 'outlined-warning'
  | 'outlined-danger'
  | 'outlined-error';

type ThemeVariantIntent = FilledIntent | OutlinedIntent;

const StyledIconWrapper = styled.div<{
  themeSize: 'default' | 'compact';
  themeVariant: 'filled' | 'outlined';
}>`
  display: flex;
  align-items: center;
  margin: 0;
  padding: 0;

  ${({ themeSize, theme }) => {
    switch (themeSize) {
      case 'default':
        return css`
          margin-top: ${theme.space.alert.iconDefaultMarginTop};
          margin-right: ${theme.space.alert.iconDefaultMarginRight};
          line-height: ${theme.lineHeights.alert.iconDefault};
        `;
      case 'compact':
        return css`
          margin-top: ${theme.space.alert.iconCompactMarginTop};
          margin-right: ${theme.space.alert.iconCompactMarginRight};
          line-height: ${theme.lineHeights.alert.iconCompact};
        `;
    }
  }};

  ${({ themeVariant }) => {
    switch (themeVariant) {
      case 'filled':
        return css`
          color: white;
        `;
      case 'outlined':
        return css`
          color: inherit;
        `;
    }
  }};
`;

const StyledInner = styled.div`
  flex: 1;
  margin: 0;
  padding: 0;
`;

const StyledTitle = styled.div`
  margin: 0;
  padding: 0;
  font-size: ${({ theme }) => theme.fontSizes.alert.title};
  line-height: ${({ theme }) => theme.lineHeights.alert.title};
  margin-bottom: ${({ theme }) => theme.space.alert.titleMarginBottom};
`;

const StyledContent = styled.div`
  margin: 0;
  padding: 0;
  font-size: ${({ theme }) => theme.fontSizes.alert.content};
  line-height: ${({ theme }) => theme.lineHeights.alert.content};
`;

const StyledAlert = styled.div<{
  themeIntent: 'success' | 'info' | 'warning' | 'danger' | 'error';
  themeSize: 'default' | 'compact';
  themeVariant: 'filled' | 'outlined';
  themeVariantIntent: ThemeVariantIntent;
}>`
  display: flex;
  align-items: flex-start;
  border-style: solid;
  margin: 0;

  font-weight: ${({ theme }) => theme.fontWeights.alert.text};
  border-radius: ${({ theme }) => theme.radii.alert.wrapper};

  ${({ themeVariant, theme }) => {
    switch (themeVariant) {
      case 'filled':
        return css`
          color: ${theme.colors.alert.textFilled};
          border-width: ${theme.borderWidths.alert.wrapperFilled};
        `;
      case 'outlined':
        return css`
          color: ${theme.colors.alert.textOutlined};
          border-width: ${theme.borderWidths.alert.wrapperOutlined};
        `;
    }
  }};

  ${({ themeSize, theme }) => {
    switch (themeSize) {
      case 'default':
        return css`
          padding: ${theme.space.alert.defaultPadding};
        `;
      case 'compact':
        return css`
          padding: ${theme.space.alert.compactPadding};
        `;
    }
  }};

  ${({ themeVariantIntent, theme }) => {
    switch (themeVariantIntent) {
      case 'filled-success':
        return css`
          background-color: ${theme.colors.alert.bgFilledSuccess};
        `;
      case 'filled-info':
        return css`
          background-color: ${theme.colors.alert.bgFilledInfo};
        `;
      case 'filled-warning':
        return css`
          background-color: ${theme.colors.alert.bgFilledWarning};
        `;
      case 'filled-danger':
        return css`
          background-color: ${theme.colors.alert.bgFilledDanger};
        `;
      case 'filled-error':
        return css`
          background-color: ${theme.colors.alert.bgFilledError};
        `;
      case 'outlined-success':
        return css`
          background-color: ${theme.colors.alert.bgOutlinedSuccess};
        `;
      case 'outlined-info':
        return css`
          background-color: ${theme.colors.alert.bgOutlinedInfo};
        `;
      case 'outlined-warning':
        return css`
          background-color: ${theme.colors.alert.bgOutlinedWarning};
        `;
      case 'outlined-danger':
        return css`
          background-color: ${theme.colors.alert.bgOutlinedDanger};
        `;
      case 'outlined-error':
        return css`
          background-color: ${theme.colors.alert.bgOutlinedError};
        `;
    }
  }};

  ${({ themeIntent, theme }) => {
    switch (themeIntent) {
      case 'success':
        return css`
          border-color: ${theme.colors.alert.borderSuccess};
        `;
      case 'info':
        return css`
          border-color: ${theme.colors.alert.borderInfo};
        `;
      case 'warning':
        return css`
          border-color: ${theme.colors.alert.borderWarning};
        `;
      case 'danger':
        return css`
          border-color: ${theme.colors.alert.borderDanger};
        `;
      case 'error':
        return css`
          border-color: ${theme.colors.alert.borderError};
        `;
    }
  }};
`;

const StyledCloseButton = styled.div<{
  themeSize: 'default' | 'compact';
  themeVariant: 'filled' | 'outlined';
}>`
  margin: 0;
  padding: 0;
  margin-left: auto;

  ${({ themeSize, theme }) => {
    switch (themeSize) {
      case 'default':
        return css`
          margin-top: ${theme.space.alert.iconDefaultMarginTop};
          line-height: ${theme.lineHeights.alert.iconDefault};
        `;
      case 'compact':
        return css`
          margin-right: ${theme.space.alert.iconCompactMarginRight};
          line-height: ${theme.lineHeights.alert.iconCompact};
        `;
    }
  }};

  ${({ themeVariant }) => {
    switch (themeVariant) {
      case 'filled':
        return css`
          color: white;
        `;
      case 'outlined':
        return css`
          color: inherit;
        `;
    }
  }};
`;

export {
  StyledAlert,
  StyledTitle,
  StyledInner,
  StyledContent,
  StyledIconWrapper,
  StyledCloseButton,
  FilledIntent,
  OutlinedIntent,
  ThemeVariantIntent,
};
