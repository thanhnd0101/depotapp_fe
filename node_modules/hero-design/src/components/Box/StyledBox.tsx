import styled, { css } from 'styled-components';

import { Space } from '../../theme/global/space';
import { BorderWidths, Radii } from '../../theme/global/borders';
import { FontSizes, LineHeights } from '../../theme/global/typography';
import { COLORS_MAP, FONT_WEIGHTS_MAP } from './constants';

type Colors =
  | 'black'
  | 'blue'
  | 'blue-dark-30'
  | 'blue-dark-75'
  | 'blue-light-30'
  | 'blue-light-75'
  | 'blue-light-90'
  | 'green'
  | 'green-dark-30'
  | 'green-dark-75'
  | 'green-light-30'
  | 'green-light-90'
  | 'grey'
  | 'grey-dark-30'
  | 'grey-dark-75'
  | 'grey-light-60'
  | 'grey-light-90'
  | 'grotesque-green'
  | 'orange'
  | 'orange-dark-30'
  | 'orange-dark-75'
  | 'orange-light-30'
  | 'orange-light-90'
  | 'pink'
  | 'pink-dark-30'
  | 'pink-dark-75'
  | 'pink-light-30'
  | 'pink-light-90'
  | 'purple'
  | 'red'
  | 'red-dark-30'
  | 'red-dark-75'
  | 'red-light-30'
  | 'red-light-90'
  | 'smalt'
  | 'smalt-dark-75'
  | 'smalt-light-30'
  | 'smalt-light-45'
  | 'violet'
  | 'white'
  | 'yellow'
  | 'yellow-dark-75';

const StyledBox = styled.div<{
  themeBgColor?: Colors;
  themeBorderColor?: Colors;
  themeBorderRadius?: keyof Radii;
  themeBorderStyle?: 'dotted' | 'dashed' | 'solid';
  themeBorderWidth?: keyof BorderWidths;
  themeColor?: Colors;
  themeFontSize?: keyof FontSizes;
  themeFontWeight?: 'light' | 'regular' | 'semi-bold' | 'bold';
  themeLineHeight?: keyof LineHeights;
  themeMargin?: keyof Space;
  themeMarginBottom?: keyof Space;
  themeMarginLeft?: keyof Space;
  themeMarginRight?: keyof Space;
  themeMarginTop?: keyof Space;
  themePadding?: keyof Space;
  themePaddingBottom?: keyof Space;
  themePaddingLeft?: keyof Space;
  themePaddingRight?: keyof Space;
  themePaddingTop?: keyof Space;
}>`
  margin: 0;
  padding: 0;

  ${({ themeBgColor, theme }) => {
    switch (themeBgColor) {
      case undefined:
        return css``;
      default:
        return css`
          background-color: ${theme.colors[COLORS_MAP[themeBgColor]]};
        `;
    }
  }};

  ${({ themeBorderColor, theme }) => {
    switch (themeBorderColor) {
      case undefined:
        return css``;
      default:
        return css`
          border-color: ${theme.colors[COLORS_MAP[themeBorderColor]]};
        `;
    }
  }};

  ${({ themeBorderRadius, theme }) => {
    switch (themeBorderRadius) {
      case undefined:
        return css``;
      default:
        return css`
          border-radius: ${theme.radii[themeBorderRadius]}px;
        `;
    }
  }};

  ${({ themeBorderStyle }) => {
    switch (themeBorderStyle) {
      case undefined:
        return css``;
      default:
        return css`
          border-style: ${themeBorderStyle};
        `;
    }
  }};

  ${({ themeBorderWidth, theme }) => {
    switch (themeBorderWidth) {
      case undefined:
        return css``;
      default:
        return css`
          border-width: ${theme.borderWidths[themeBorderWidth]}px;
        `;
    }
  }};

  ${({ themeColor, theme }) => {
    switch (themeColor) {
      case undefined:
        return css``;
      default:
        return css`
          color: ${theme.colors[COLORS_MAP[themeColor]]};
        `;
    }
  }};

  ${({ themeFontSize, theme }) => {
    switch (themeFontSize) {
      case undefined:
        return css``;
      default:
        return css`
          font-size: ${theme.fontSizes[themeFontSize]}px;
        `;
    }
  }};

  ${({ themeFontWeight, theme }) => {
    switch (themeFontWeight) {
      case undefined:
        return css``;
      default:
        return css`
          font-weight: ${theme.fontWeights[FONT_WEIGHTS_MAP[themeFontWeight]]};
        `;
    }
  }};

  ${({ themeLineHeight, theme }) => {
    switch (themeLineHeight) {
      case undefined:
        return css``;
      default:
        return css`
          line-height: ${theme.lineHeights[themeLineHeight]}px;
        `;
    }
  }};

  ${({ themeMargin, theme }) => {
    switch (themeMargin) {
      case undefined:
        return css``;
      default:
        return css`
          margin: ${theme.space[themeMargin]}px;
        `;
    }
  }};

  ${({ themeMarginBottom, theme }) => {
    switch (themeMarginBottom) {
      case undefined:
        return css``;
      default:
        return css`
          margin-bottom: ${theme.space[themeMarginBottom]}px;
        `;
    }
  }};

  ${({ themeMarginLeft, theme }) => {
    switch (themeMarginLeft) {
      case undefined:
        return css``;
      default:
        return css`
          margin-left: ${theme.space[themeMarginLeft]}px;
        `;
    }
  }};

  ${({ themeMarginRight, theme }) => {
    switch (themeMarginRight) {
      case undefined:
        return css``;
      default:
        return css`
          margin-right: ${theme.space[themeMarginRight]}px;
        `;
    }
  }};

  ${({ themeMarginTop, theme }) => {
    switch (themeMarginTop) {
      case undefined:
        return css``;
      default:
        return css`
          margin-top: ${theme.space[themeMarginTop]}px;
        `;
    }
  }};

  ${({ themePadding, theme }) => {
    switch (themePadding) {
      case undefined:
        return css``;
      default:
        return css`
          padding: ${theme.space[themePadding]}px;
        `;
    }
  }};

  ${({ themePaddingBottom, theme }) => {
    switch (themePaddingBottom) {
      case undefined:
        return css``;
      default:
        return css`
          padding-bottom: ${theme.space[themePaddingBottom]}px;
        `;
    }
  }};

  ${({ themePaddingLeft, theme }) => {
    switch (themePaddingLeft) {
      case undefined:
        return css``;
      default:
        return css`
          padding-left: ${theme.space[themePaddingLeft]}px;
        `;
    }
  }};

  ${({ themePaddingRight, theme }) => {
    switch (themePaddingRight) {
      case undefined:
        return css``;
      default:
        return css`
          padding-right: ${theme.space[themePaddingRight]}px;
        `;
    }
  }};

  ${({ themePaddingTop, theme }) => {
    switch (themePaddingTop) {
      case undefined:
        return css``;
      default:
        return css`
          padding-top: ${theme.space[themePaddingTop]}px;
        `;
    }
  }};
`;

export { StyledBox };
