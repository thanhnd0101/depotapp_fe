import React, { ReactElement, ReactNode } from 'react';

import { space } from '../../theme/global/space';
import { borderWidths, radii } from '../../theme/global/borders';
import { fontSizes, lineHeights } from '../../theme/global/typography';
import { CommonProps } from '../common';
import { StyledBox } from './StyledBox';

type BorderWidths = typeof borderWidths;
type Radii = typeof radii;
type Space = typeof space;
type FontSizes = typeof fontSizes;
type LineHeights = typeof lineHeights;

interface Theme {
  borderStyles: 'dotted' | 'dashed' | 'solid';
  borderWidths: keyof BorderWidths;
  colors:
    | 'black'
    | 'blue'
    | 'blue-dark-30'
    | 'blue-dark-75'
    | 'blue-light-30'
    | 'blue-light-75'
    | 'blue-light-90'
    | 'green'
    | 'green-dark-30'
    | 'green-dark-75'
    | 'green-light-30'
    | 'green-light-90'
    | 'grey'
    | 'grey-dark-30'
    | 'grey-dark-75'
    | 'grey-light-60'
    | 'grey-light-90'
    | 'grotesque-green'
    | 'orange'
    | 'orange-dark-30'
    | 'orange-dark-75'
    | 'orange-light-30'
    | 'orange-light-90'
    | 'pink'
    | 'pink-dark-30'
    | 'pink-dark-75'
    | 'pink-light-30'
    | 'pink-light-90'
    | 'purple'
    | 'red'
    | 'red-dark-30'
    | 'red-dark-75'
    | 'red-light-30'
    | 'red-light-90'
    | 'smalt'
    | 'smalt-dark-75'
    | 'smalt-light-30'
    | 'smalt-light-45'
    | 'violet'
    | 'white'
    | 'yellow'
    | 'yellow-dark-75';
  fontSizes: keyof FontSizes;
  fontWeights: 'light' | 'regular' | 'semi-bold' | 'bold';
  lineHeights: keyof LineHeights;
  radii: keyof Radii;
  space: keyof Space;
}

export interface BoxProps extends CommonProps {
  /**
   * Box's background color.
   */
  bgColor?: Theme['colors'];
  /**
   * Box's border color.
   */
  borderColor?: Theme['colors'];
  /**
   * Box's border radius.
   */
  borderRadius?: Theme['radii'];
  /**
   * Box's border style.
   */
  borderStyle?: Theme['borderStyles'];
  /**
   * Box's border width.
   */
  borderWidth?: Theme['borderWidths'];
  /**
   * Box's children node.
   */
  children?: ReactNode;
  /**
   * Box's text color.
   */
  color?: Theme['colors'];
  /**
   * Box's font size.
   */
  fontSize?: Theme['fontSizes'];
  /**
   * Box's font weight.
   */
  fontWeight?: Theme['fontWeights'];
  /**
   * Box's line height.
   */
  lineHeight?: Theme['lineHeights'];
  /**
   * Box's margin.
   */
  m?: Theme['space'];
  /**
   * Box's margin-bottom.
   */
  mb?: Theme['space'];
  /**
   * Box's margin-left.
   */
  ml?: Theme['space'];
  /**
   * Box's margin-right.
   */
  mr?: Theme['space'];
  /**
   * Box's margin-top.
   */
  mt?: Theme['space'];
  /**
   * Box's padding.
   */
  p?: Theme['space'];
  /**
   * Box's padding-bottom.
   */
  pb?: Theme['space'];
  /**
   * Box's padding-left.
   */
  pl?: Theme['space'];
  /**
   * Box's padding-right.
   */
  pr?: Theme['space'];
  /**
   * Box's padding-top.
   */
  pt?: Theme['space'];
}

const Box = ({
  bgColor,
  borderColor,
  borderRadius,
  borderStyle,
  borderWidth,
  children,
  color,
  fontSize,
  fontWeight,
  lineHeight,
  m,
  mb,
  ml,
  mr,
  mt,
  p,
  pb,
  pl,
  pr,
  pt,
  className,
  id,
  style,
  'data-test-id': dataTestId,
}: BoxProps): ReactElement => (
  <StyledBox
    themeBgColor={bgColor}
    themeBorderColor={borderColor}
    themeBorderRadius={borderRadius}
    themeBorderStyle={borderStyle}
    themeBorderWidth={borderWidth}
    themeColor={color}
    themeFontSize={fontSize}
    themeFontWeight={fontWeight}
    themeLineHeight={lineHeight}
    themeMargin={m}
    themeMarginBottom={mb}
    themeMarginLeft={ml}
    themeMarginRight={mr}
    themeMarginTop={mt}
    themePadding={p}
    themePaddingBottom={pb}
    themePaddingLeft={pl}
    themePaddingRight={pr}
    themePaddingTop={pt}
    className={className}
    id={id}
    style={style}
    data-test-id={dataTestId}
  >
    {children}
  </StyledBox>
);

export default Box;
