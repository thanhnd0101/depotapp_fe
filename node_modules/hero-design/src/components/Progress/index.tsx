import React, { ReactElement, useState, useEffect } from 'react';
import ProgressBar, { ProgressBarProps } from './ProgressBar';
import ProgressCircle from './ProgressCircle';
import assert from '../../utils/assert';
import { CommonProps } from '../common';

export interface ProgressProps extends CommonProps {
  /**
   * Size of progress.
   */
  size?: 'small' | 'medium';
  /**
   * Status of progress.
   */
  status?: 'active' | 'exception';
  /**
   * The progress completion percentage: 0-100.
   */
  value: number;
  /**
   * Progress type.
   */
  variant?: 'bar' | 'circle';
  /**
   * Whether to display the progress value and the status icon.
   */
  withInfo?: boolean;
}

const Progress = ({
  size = 'medium',
  withInfo = true,
  status = 'active',
  value,
  variant = 'bar',
  id,
  className,
  style,
  'data-test-id': dataTestId,
}: ProgressProps): ReactElement => {
  assert(
    value >= 0 && value <= 100,
    `[Progress] value:${value} is not in range [0, 100]`
  );
  const [percentage, setPercentage] = useState<number>(value);
  const [intent, setIntent] = useState<ProgressBarProps['intent']>('primary');

  useEffect((): void => {
    setPercentage(value);

    if (status === 'exception') {
      setIntent('danger');
    } else if (value === 100) {
      setIntent('success');
    } else {
      setIntent('primary');
    }
  }, [value, status]);

  return (
    <>
      {variant === 'bar' && (
        <ProgressBar
          intent={intent}
          size={size}
          withInfo={withInfo}
          value={percentage}
          id={id}
          className={className}
          style={style}
          data-test-id={dataTestId}
        />
      )}
      {variant === 'circle' && (
        <ProgressCircle
          intent={intent}
          size={size}
          withInfo={withInfo}
          value={percentage}
          id={id}
          className={className}
          style={style}
          data-test-id={dataTestId}
        />
      )}
    </>
  );
};

export default Progress;
